From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: bsp <bsp@radxa.com>
Date: Wed, 12 Jul 2023 16:34:21 +0800
Subject: [PATCH] Prefer FHD for meson

---
 drivers/gpu/drm/drm_edid.c | 35 +++++++++++++++++++++++++++++++++--
 1 file changed, 33 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/drm_edid.c b/drivers/gpu/drm/drm_edid.c
index 739e0d40cca6..d74e002bf7e8 100644
--- a/drivers/gpu/drm/drm_edid.c
+++ b/drivers/gpu/drm/drm_edid.c
@@ -90,6 +90,8 @@ static int oui(u8 first, u8 second, u8 third)
 /* Cap the DSC target bitrate to 15bpp */
 #define EDID_QUIRK_CAP_DSC_15BPP		(1 << 13)
 
+#define CONNECTOR_QUIRK_PREFER_FHD		(1 << 14)
+
 #define MICROSOFT_IEEE_OUI	0xca125c
 
 struct detailed_mode_closure {
@@ -233,6 +235,12 @@ static const struct edid_quirk {
 	EDID_QUIRK('S', 'V', 'R', 0x1019, EDID_QUIRK_NON_DESKTOP),
 };
 
+static const struct connector_quirk {
+	char* connector_driver;
+	u32 quirks;
+} connector_quirk_list[] = {
+	{ "meson", EDID_QUIRK_PREFER_LARGE_60 | CONNECTOR_QUIRK_PREFER_FHD },
+};
 /*
  * Autogenerated from the DMT spec.
  * This table is copied from xfree86/modes/xf86EdidModes.c.
@@ -2809,6 +2817,21 @@ static u32 edid_get_quirks(const struct drm_edid *drm_edid)
 	return 0;
 }
 
+static u32 connector_get_quirks(struct drm_connector *connector)
+{
+	const char* connector_driver = connector->dev->driver->name;
+	const struct connector_quirk *quirk;
+	int i;
+
+	for (i = 0; i < ARRAY_SIZE(connector_quirk_list); i++) {
+		quirk = &connector_quirk_list[i];
+		if (!strcmp(quirk->connector_driver, connector_driver))
+			return quirk->quirks;
+	}
+
+	return 0;
+}
+
 #define MODE_SIZE(m) ((m)->hdisplay * (m)->vdisplay)
 #define MODE_REFRESH_DIFF(c,t) (abs((c) - (t)))
 
@@ -2840,6 +2863,14 @@ static void edid_fixup_preferred(struct drm_connector *connector,
 		if (cur_mode == preferred_mode)
 			continue;
 
+		if ((quirks & CONNECTOR_QUIRK_PREFER_FHD) &&
+			MODE_SIZE(cur_mode) > 1920 * 1080)
+			continue;
+
+		if ((quirks & CONNECTOR_QUIRK_PREFER_FHD) &&
+			MODE_SIZE(preferred_mode) > 1920 * 1080)
+			preferred_mode = cur_mode;
+
 		/* Largest mode is preferred */
 		if (MODE_SIZE(cur_mode) > MODE_SIZE(preferred_mode))
 			preferred_mode = cur_mode;
@@ -6182,7 +6213,7 @@ static u32 update_display_info(struct drm_connector *connector,
 	struct drm_display_info *info = &connector->display_info;
 	const struct edid *edid = drm_edid->edid;
 
-	u32 quirks = edid_get_quirks(drm_edid);
+	u32 quirks = edid_get_quirks(drm_edid) | connector_get_quirks(connector);
 
 	drm_reset_display_info(connector);
 
@@ -6404,7 +6435,7 @@ static int _drm_edid_connector_update(struct drm_connector *connector,
 	if (drm_edid->edid->features & DRM_EDID_FEATURE_DEFAULT_GTF)
 		num_modes += add_inferred_modes(connector, drm_edid);
 
-	if (quirks & (EDID_QUIRK_PREFER_LARGE_60 | EDID_QUIRK_PREFER_LARGE_75))
+	if (quirks & (EDID_QUIRK_PREFER_LARGE_60 | EDID_QUIRK_PREFER_LARGE_75 | CONNECTOR_QUIRK_PREFER_FHD))
 		edid_fixup_preferred(connector, quirks);
 
 	if (quirks & EDID_QUIRK_FORCE_6BPC)
-- 
2.41.0

